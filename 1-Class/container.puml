@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

LAYOUT_WITH_LEGEND()

title Container diagram for Face Frenzy

Person(players, Player, "People playing Face Frenzy")
Person(admin, Admin, "Person monitoring the game remotely through he HTTP server")

System_Boundary(c1, "Frace Frenzy | PYNQ Board") {
    Container(face_detection, "Face Detection Component", "C/C++", "Provides face detection from processed data based on the Haar-cascade Classifier from OpenCV")
    Container(ui, "UI", "C/C++", "User interface displayed on the HDMI screen")
    Container(io_handler, "I/O Handler", "C/C++", "Handles interactions between the system and I/O devices")
    Container(game_manager, "Game State Manager", "C/C++", "Takes care of the game state, like starting the game, evaluating a loss or a win, etc.")
    Container(server, "Basic HTTP Server", "Docker", "Allows remote monitoring of the game by system admins. Handled on a separate thread.")
    Container(pipeline, "Data Pipeline", "C/C++", "Manages data transfer between the camera and the face detection, applying preprocessing along the way.")
}

System_Ext(camera, "Camera", "external video input device connected to the embedded device that will capture an image of the players after a countdown ends.")
System_Ext(pynq, "Pynq Board", "All on-board embedded accessories like LEDs, OLED, etc.")

Rel(players, ui, "Interact with", "Physical Buttons")
Rel(players, io_handler, "Use", "Buttons + Camera ")
Rel(io_handler, pynq, "Interacts with hardware", "C/C++ HAL/Memory-mapped I/O")
Rel(io_handler, camera, "Obtains video information", "USB -> OpenCV")

Rel(io_handler, pipeline, "Passes camera data", "JSON/HTTPS")
Rel_Neighbor(pipeline, face_detection, "Passes processed data", "async, JSON/HTTPS")
Rel(face_detection, game_manager, "Returns predictions", "JSON/HTTPS")
Rel(ui, players, "Displays game state")
Rel(io_handler, game_manager, "Passes user input", "Buttons from embedded device")
Rel(game_manager, io_handler, "Sends hardware user feedback")
Rel(game_manager, ui, "Provides game state information")
Rel(game_manager, server, "Provides game state information")

Rel(admin, server, "Monitors system")
Rel(server, admin, "Displays game state")

@enduml